#!/bin/bash

#  Sample Batch Script for a Serial job
#  Submit this script using the command: qsub <script_name>
#  Use the "qstat" command to check the status of a job.
#
# The following are embedded QSUB options. The syntax is #PBS (the # does
# _not_  denote that the lines are commented out so do not remove).
#
# walltime : maximum wall clock time (hh:mm:ss)
#PBS -l walltime={WALLTIME}
#
# nodes: number of 8-core nodes
#   ppn: how many cores per node to use (1 through 8)
#       (you are always charged for the entire node)
#
#PBS -l nodes={NODES}:ppn=32:xe
#
#PBS -lgres=ccm
#
#PBS -A jrr
#PBS -q {QUEUE}
#PBS -N {JOBNAME}
#
#PBS -e {SCRATCH_PATH}/$PBS_JOBID.err
#PBS -o {SCRATCH_PATH}/$PBS_JOBID.out
#
#
# Send a notification email when the job (b)egins and when the (e)nds
# # remove the line below to disable email notification.
#PBS -m be
#PBS -M {USER}@ncsa.illinois.edu
#
# # End of embedded QSUB options

# Make sure we run bash in BW
. /opt/modules/default/init/bash

# Working directory for this PBS Job
mkdir -p {SCRATCH_PATH}/$PBS_JOBID
cd {SCRATCH_PATH}/$PBS_JOBID

touch pbsGlideinSetup
/bin/echo Beginning_Glidein_Setup

# -----------------------------------------------------------------
# Create the worker that will pass some environment
jobid=`echo $PBS_JOBID | cut -d'.' -f 1`
echo "jobid = " $jobid
# create a command file
worker_sh={SCRATCH_PATH}/$PBS_JOBID/${jobid}_worker.sh
cat > $worker_sh <<EOF
#!/bin/sh --norc
export PBS_JOBID=$PBS_JOBID
export USER=$USER
export HOME=$HOME
env
{SHELL_SCRIPT}
EOF
chmod a+xr $worker_sh
# -----------------------------------------------------------------

# EXAMPLE
#aprun -N 1  -n 48 -d 16 myscript.sh
#aprun  -N 1  -n {NODES} -d 16 {SHELL_SCRIPT}
#aprun  -N 1  -n {NODES} -d 16 $worker_sh

# Using ccmrun instead of aprun
module load ccm
ccmrun $worker_sh --hostfile=”$PBS_NODEFILE”


sleep 10
touch pbsPostAprun
wait

touch pbsPostWait
date 
