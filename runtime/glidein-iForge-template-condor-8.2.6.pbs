#!/bin/bash

#  Sample Batch Script for a Serial job
#  Submit this script using the command: qsub <script_name>
#  Use the "qstat" command to check the status of a job.
#
# The following are embedded QSUB options. The syntax is #PBS (the # does
# _not_  denote that the lines are commented out so do not remove).
#
# walltime : maximum wall clock time (hh:mm:ss)
#PBS -l walltime={WALLTIME}
#
# nodes: number of 8-core nodes
#   ppn: how many cores per node to use (1 through 8)
#       (you are always charged for the entire node)
#
#PBS -l nodes={NODES}:ppn=20
#
# export all my environment variables to the job
### #PBS -V
#
# job name (default = name of script file)
#PBS -N {JOBNAME}
#PBS -q {QUEUE}

# Send a notification email when the job (b)egins and when the (e)nds
# # remove the line below to disable email notification.
#PBS -m be
#PBS -M $USER@ncsa.illinois.edu
#
# End of embedded QSUB options


env | grep PBS
env | grep USER

# Get the nodes names and put the in random tmp file
cat $PBS_NODEFILE
uniq $PBS_NODEFILE > /tmp/pbs.nodes.file.$$

/bin/echo DATE
date

/bin/echo HOSTNAME
hostname -f

/bin/echo DEFAULT_REMOTE_DIR
pwd

# Working directory for this PBS Job
mkdir -p ${HOME}/scratch/$PBS_JOBID
cd ${HOME}/scratch/$PBS_JOBID

touch pbsGlideinSetup
/bin/echo Beginning_Glidein_Setup

#
# Choose a script to start the glidein
#
#/projects/ncsa/des/condor/scripts/worker-dessub-condor_8_2_6.sh
#/projects/ncsa/des/condor/scripts/worker-descmp1-condor_8_2_6.sh

# Here we loop over all the node available and ssh to them
while IFS='' read -r line || [[ -n $line ]]; do
     ssh "$line" {SHELL_SCRIPT} & 
done < "/tmp/pbs.nodes.file.$$"


touch pbsPostScript
wait

touch pbsPostWait
sleep 60


